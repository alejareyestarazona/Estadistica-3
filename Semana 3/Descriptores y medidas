#Semana 3 - Descriptores y Medidas
#Author - Maria Alejandra Reyes Tarazona

#Paso 1: Sumatorio
data(iris)
iris

# Sumatorio de las longitud del petalo de la especie setosa
pl.Setosa <- sum(iris$Petal.Length[which(iris$Species=='setosa')])

pl.Setosa

#Paso 2: Promedio Aritmetico

#  ¿Cual es la longitud de la muestra?

dim(iris)

length(iris)

nrow(iris)

length(iris$Petal.Length)

length(iris$Petal.Length[which(iris$Species=='setosa')])

# n de nuestra pregunta
n<-length(iris$Petal.Length[which(iris$Species=='setosa')])

n

# media aritmetica 
promedio<- pl.Setosa/n

promedio

mi.promedio <- function(x) {
  
  mi.suma<- sum(x)
  mi.n<-length(x)
  mi.prom <- mi.suma/mi.n
  return(mi.prom)
}

mi.promedio(x= iris$Petal.Length[which(iris$Species=='setosa')])

#Con la funcion mean( ), podemos ahorrarnos todo esto

mean(iris$Petal.Length[which(iris$Species=='setosa')])

hist(iris$Petal.Length[which(iris$Species=='setosa')])

##Ejercicio 2: Si la columna iris$Petal.Length tuviera valores 'NA', Como podrias eliminarlos antes de hacer la estimacion de la media?

# Usando "na.rm"

na.rm = "True"

##Estime la media aritmetica de la altura, la longitud y el ancho del caparazon de las tortugas pintadas [data(tortues), paquete: ade4], use la funcion apply para obtener los estadisticos de cada medida en un mismo 

library(ade4)
data("tortues")
x <- mean(tortues$long)
y <- mean(tortues$larg)
z <- mean(tortues$haut)
promedios <- cbind(x,y,z)
promedios

library(psych)

# Media armonica

harmonic.mean(iris$Petal.Length[which(iris$Species=='setosa')])


# Media Geometrica

geometric.mean(iris$Petal.Length[which(iris$Species=='setosa')])

# Voy a escribir mis datos de trabajos en un objeto llamado setosa

setosa <- iris$Petal.Length[which(iris$Species=='setosa')]

# Ordenar

sort(setosa)

# longitud de setosa
n

# Mediana Es el punto medio del vector

median(setosa)

##Ejercicio 3: Genere una funcion propia que le permita encontrar la mediana, tal y como lo hizo con la media aritmetica.

Mi.mediana<-function(x) {
  
  orden <- sort(x)
  mi.n<-length(x)
  mi.medio <- orden[mi.n/2]
  return(mi.medio)
}

Mi.mediana(x= iris$Petal.Length[which(iris$Species=='setosa')])
 
## Moda

# moda estadistica?
mode(setosa)

# en este punto hay que generar la funciÃ³n

freq <- table(setosa)
freq

freq[which.max(freq)]

##Ejercicio 4: Genere una funcion propia que le permita calcular la moda

mimoda<-function(n){ x<-table(n)
mode<-x[which.max (x)]
return (mode)}
mimoda (setosa)
mode<-mimoda (setosa)

# Rango = x
range(setosa)

# Freq = y
min(freq)
max(freq)

# distribuciÃ³n de frecuencias de setosa
hist(setosa, # histogram
     col = "peachpuff", # column color
     border = "black", 
     prob = TRUE, # show densities instead of frequencies
     xlim = c(0.5,2.5),
     xlab = "Longitud de pÃ©talo",
     main = "Frecuencias de longitud de pÃ©talo de setosa")
lines(density(setosa),
      lwd = 2, # thickness of line
      col = "chocolate3") # Generar la distribuciÃ³n continua distribuciÃ³n de masa a partir de los datos observados

# Graficar la media
abline(v = mean(setosa),
       col = "royalblue",
       lwd = 2)

abline(v = median(setosa),
       col = "red",
       lwd = 2)

legend(x = "topright", # location of legend within plot area
       c("Density plot", "Mean", "Median"),
       col = c("chocolate3", "royalblue", "red"),
       lwd = c(2, 2, 2))

##Ejercicio 5:Despues de generar la funcion del callculo de moda, grafiquela sobre el histograma.

hist(setosa, # histogram
     col = "peachpuff", # column color
     border = "black", 
     prob = TRUE, # show densities instead of frequencies
     xlim = c(0.5,2.5),
     xlab = "Longitud de pétalo",
     main = "Frecuencias de longitud de pétalo de setosa")
lines(density(setosa),
      lwd = 2, # thickness of line
      col = "chocolate3") # Generar la distribuciÃ³n continua distribuciÃ³n de masa a partir de los datos observados

abline(v = mean(setosa),
       col = "royalblue",
       lwd = 2)

abline(v = median(setosa),
       col = "red",
       lwd = 2)


abline(v = mi.moda(x= iris$Petal.Length[which(iris$Species=='setosa')]) ,
       col = "red",
       lwd = 2)

legend(x = "topright", # location of legend within plot area
       c("Density plot", "Moda"),
       col = c("chocolate3", "royalblue"),
       lwd = c(2, 2))

# moda estadistica?
density(setosa)

# Cuantil

quantile(setosa)

# Longitudes menores o iguales al 80%
quantile(setosa,probs = 0.8)

# Cuartil
quantile(setosa,probs = c(seq(0, 1, 0.25)))

##Ejercicio 6: Genere los cuantiles en intervalos de 0.5 Existen otras funciones que nos permiten generar cuartiles, incluyendo informacion de tendencias centrales. Es decir, density() pero mas resumido.

quantile(setosa,probs = c(seq(0, 1, 0.5)))

# summary
summary(setosa)

# Lo interesante no es summary, es como estraer informacion de ahi y poderlo graficar

str(summary(setosa))
x <- summary(setosa)
class(x)

# Obtener minimo 

x[1]

# distribuciÃ³n de frecuencias de setosa

hist(setosa, # histogram
     col = "grey80", # column color
     border = "black", 
     prob = TRUE, # show densities instead of frequencies
     xlim = c(0.5,2.5),
     xlab = "Longitud de pÃ©talo",
     main = "Frecuencias de longitud de pÃ©talo de setosa")
lines(density(setosa),
      lwd = 2, # thickness of line
      col = "chocolate3") # Generar la distribuciÃ³n continua distribuciÃ³n de masa a partir de los datos observados

# Graficar la media

abline(v = x[2],
       col = "red1",
       lwd = 2)

abline(v = x[3],
       col = "red4",
       lwd = 2)

abline(v = x[4],
       col = "blue",
       lwd = 2)

abline(v = x[5],
       col = "red1",
       lwd = 2)

legend(x = "topright", # location of legend within plot area
       c("Density plot","1st Qu", "Mean", "Median","3st Qu" ),
       col = c("chocolate3", "royalblue", "red"),
       lwd = c(2, 2, 2))

# aggregate()

aggregate(iris[,1:4], list(Especies = iris$Species), mean)

#Ejercicio 7: Que sucede si el numero de columnas deseado no se especifica? Obtenga la mediana, la moda y los cuantiles para cada especie de iris y para cada variable morfometrica.

aggregate(iris[,1:4], list(Especies = iris$Species), median)
aggregate(iris[,1:4], list(Especies = iris$Species), mean)
aggregate(iris[,1:4], list(Especies = iris$Species), quantile)

# voy a campo y mido dos poblaciones de pÃ¡jaros
pop1 <-abs(rnorm(200,mean = 6,sd = 1))

pop2 <-abs(rnorm(200,mean = 6,sd = 5))


pops<-cbind(pop1,pop2)
pops

summary(pops)

boxplot(x = pops,notch=T)

# Varianza
apply(pops,2,var)

# SD

apply(pops,2,sd)

plot(density(pops[,1]))

plot(density(pops[,2]))

##Ejercicio 8: Grafique la distribucion de frecuencias de cada poblacion usando histograma y densidad en el mismo grafico. Adiciones la media, la mediana y la moda.

hist(pops[,1], freq = FALSE,
     col = "darkslategray2",
     border = "black", 
     prob = TRUE, 
     xlab = "Longitud de cola (cm)",
     main = "Frecuencias de longitud de cola en pájaros (P1)")
lines(density(pops[,1]),
      lwd = 2,
      col = "darkslategray")
abline(v = mean(pop1),
       col = "blue",
       lwd = 1)
abline(v = 3.41,
       col = "darkorchid1",
       lwd = 1)
abline(v = median(pop1),
       col = "red",
       lwd = 1)
legend(x = "topright",
       c("Densidad", "Media", "Mediana", "Moda"),
       col = c("darkslategray", "darkorchid1", "red", "darkslategray2"),
       lwd = c(2, 2, 2))

hist(pops[,2], freq = FALSE,
     col = "darkseagreen1",
     border = "black", 
     prob = TRUE, 
     xlab = "Longitud de cola (cm)",
     main = "Frecuencias de longitud de cola en pájaros (P2)")
lines(density(pops[,2]),
      lwd = 2,
      col = "magenta4")
abline(v = mean(pop1),
       col = "navy",
       lwd = 1)
abline(v = 0.08,
       col = "lawngreen",
       lwd = 1)
abline(v = median(pop1),
       col = "orangered2",
       lwd = 1)
legend(x = "topright",
       c("Densidad", "Media", "Mediana", "Moda"),
       col = c("magenta4", "navy", "orangered2", "lawngreen"),
       lwd = c(2, 2, 2))

# Para las dos columnas que representan poblaciones
describe(pops)

# Podemos ver lo msmo para niveles internos

for (i in 1:4){
  
  plot(density(iris[,i]), main = colnames(iris)[i])
}

# CÃ¡lculo
library(EnvStats)

skewness(pops[,1], na.rm = FALSE, method = "fisher")

plot(density(pops[,1]), main= 'Pop1')
abline(v= mean(pops[,1]))

skewness(pops[,2], na.rm = FALSE, method = "fisher")

plot(density(pops[,2]), main= 'Pop3')
abline(v= mean(pops[,2]))

aggregate(iris[,1:4],list(Especies= iris$Species), skewness, na.rm = FALSE, method = "fisher")

set.seed(999)
n.sample <- rnorm(n = 10000, mean = 55, sd = 4.5)

skewness(n.sample, na.rm = FALSE, method = "fisher")
plot(density(n.sample), main= 'Pop3')
abline(v= mean(n.sample))

apply(pops,2,kurtosis)

kurtosi(iris$Sepal.Length[which(iris$Species == 'setosa')])


kurtosi(n.sample)

# Podemos ver lo mismo que describe(), pero para niveles internos

describe.by(iris[,1:4],group = iris$Species)
